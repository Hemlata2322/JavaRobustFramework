<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-02T22:07:35 IST" name="Suite" finished-at="2025-01-02T22:07:54 IST" duration-ms="18968">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.loginErrorValidation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" name="loginErrorValidation" class="rahulshettyacademy.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" name="submitOrder" class="rahulshettyacademy.Tests.SubmitOrderTest"/>
      </group> <!-- purchase -->
    </groups>
    <test started-at="2025-01-02T22:07:35 IST" name="Error Validations Test" finished-at="2025-01-02T22:07:50 IST" duration-ms="15227">
      <class name="rahulshettyacademy.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:35 IST" name="launchApplication" finished-at="2025-01-02T22:07:39 IST" duration-ms="3254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:39 IST" name="loginErrorValidation" finished-at="2025-01-02T22:07:39 IST" duration-ms="614" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email  password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email  password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.Tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:39 IST" name="tearDown" finished-at="2025-01-02T22:07:40 IST" duration-ms="490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:40 IST" name="launchApplication" finished-at="2025-01-02T22:07:43 IST" duration-ms="3845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:43 IST" name="loginErrorValidation" finished-at="2025-01-02T22:07:44 IST" duration-ms="527" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email  password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email  password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.Tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:45 IST" name="tearDown" finished-at="2025-01-02T22:07:45 IST" duration-ms="568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:45 IST" name="launchApplication" finished-at="2025-01-02T22:07:47 IST" duration-ms="2287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:47 IST" name="productErrorValidation" finished-at="2025-01-02T22:07:50 IST" duration-ms="2639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationsTest@376a0d86]" started-at="2025-01-02T22:07:50 IST" name="tearDown" finished-at="2025-01-02T22:07:50 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test -->
    <test started-at="2025-01-02T22:07:35 IST" name="Submit Order Test" finished-at="2025-01-02T22:07:54 IST" duration-ms="18968">
      <class name="rahulshettyacademy.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:36 IST" name="launchApplication" finished-at="2025-01-02T22:07:39 IST" duration-ms="3000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:39 IST" name="submitOrder" data-provider="getData" finished-at="2025-01-02T22:07:43 IST" duration-ms="4134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Kiakivi@23, product=IPHONE 13 PRO, email=kiakivi@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:43 IST" name="tearDown" finished-at="2025-01-02T22:07:43 IST" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:43 IST" name="launchApplication" finished-at="2025-01-02T22:07:47 IST" duration-ms="3768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:47 IST" name="submitOrder" data-provider="getData" finished-at="2025-01-02T22:07:51 IST" duration-ms="3962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Vjjkia@2525, product=ADIDAS ORIGINAL, email=vjjkia@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:51 IST" name="tearDown" finished-at="2025-01-02T22:07:51 IST" duration-ms="584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:51 IST" name="launchApplication" finished-at="2025-01-02T22:07:53 IST" duration-ms="1981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:53 IST" name="orderHistoryTest" finished-at="2025-01-02T22:07:54 IST" depends-on-methods="rahulshettyacademy.Tests.SubmitOrderTest.submitOrder" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@66ea810]" started-at="2025-01-02T22:07:54 IST" name="tearDown" finished-at="2025-01-02T22:07:54 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
